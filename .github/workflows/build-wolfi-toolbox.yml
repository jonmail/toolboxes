name: Build and Push Wolfi Toolbox Image
on:
  schedule:
    - cron: '0 6,18 * * *'  # 6am and 6pm every day
  pull_request:
  merge_group:
  workflow_dispatch:
env:
    IMAGE_TAGS: latest
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image_variant: ["base", "sdk"]
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      # Retrieve run IDs
      - name: 'Retrieve run IDs'
        run: |
          # Ublue packages run ID
          UBLUE_RUN_ID=$(curl -L https://api.github.com/repos/ublue-os/packages/actions/workflows/wolfi.yml/runs | jq -r ".workflow_runs[0].id")
          echo "UBLUE_RUN_ID=$UBLUE_RUN_ID" >> $GITHUB_ENV

          # Wolfi tools run ID
          SDK_RUN_ID=$(curl -L https://api.github.com/repos/wolfi-dev/tools/actions/workflows/release.yaml/runs | jq -r ".workflow_runs[0].id")
          echo "SDK_RUN_ID=$SDK_RUN_ID" >> $GITHUB_ENV

      # Fetch SDK
      - name: 'Download Ublue packages'
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true
          path: ./packages
          pattern: wolfi-packages
          repository: ublue-os/packages
          run-id: ${{ env.UBLUE_RUN_ID }}

      # Fetch SDK
      - name: 'Download SDK'
        if: matrix.image_variant == 'sdk'
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true
          path: ./packages
          pattern: sdk-*
          repository: wolfi-dev/tools
          run-id: ${{ env.SDK_RUN_ID }}

      # Setup melange
      - name: Setup melange
        uses: chainguard-dev/actions/setup-melange@main

      # Sign packages with melange
      - name: Sign packages
        run: |
          # Generate keys
          melange keygen
          # Resigns all packages and rebuilds the package index
          for arch in "x86_64" "aarch64"; do
            # Not strictly needed, but might as well while we're here
            melange sign -k melange.rsa packages/$arch/*.apk

            # Rebuild the index
            melange index -o packages/$arch/APKINDEX.tar.gz packages/$arch/*.apk
            melange sign-index --signing-key melange.rsa packages/$arch/APKINDEX.tar.gz
          done

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            wolfi-${{ matrix.image_variant }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/ublue-os/boxkit/main/README.md

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      # Build image with apko
      - name: 'Build image'
        uses: distroless/actions/apko-build@main
        if: github.event_name == 'pull_request'
        id: apko-build
        with:
          archs: aarch64,x86_64
          config: toolboxes/wolfi-toolbox/${{ matrix.image_variant }}.apko.yaml
          keyring-append: ./melange.rsa.pub
          repository-append: ./packages
          tag: ${{ steps.registry_case.outputs.lowercase }}/wolfi-${{ matrix.image_variant }}:${{ env.IMAGE_TAGS }}

      # Build and publish image with apko
      - name: 'Build and publish image'
        uses: distroless/actions/apko-publish@main
        if: github.event_name != 'pull_request'
        id: apko
        with:
          archs: aarch64,x86_64
          config: toolboxes/wolfi-toolbox/${{ matrix.image_variant }}.apko.yaml
          keyring-append: ./melange.rsa.pub
          repository-append: ./packages
          tag: ${{ steps.registry_case.outputs.lowercase }}/wolfi-${{ matrix.image_variant }}:${{ env.IMAGE_TAGS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Sign container
      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ env.COSIGN_PRIVATE_KEY }}" > cosign.key
          wc -c cosign.key
          cosign sign -y --key cosign.key ${{ steps.apko.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
